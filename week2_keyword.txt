Git 2주차 주요 개념 키워드

1. 협업하기 위한 단계는 무엇이 있을까
 - 누가 작업을 할 것인지 정한다. (issue)
 - 각자 맡은 작업을 한다. (branch)
 - 각자 맡은 작업을 프로젝트에 합칠 수 있게 공유한다.
 - 작업 내용을 리뷰하고 최종적으로 프로젝트에 반영한다.

2. issue
 - 내가 할 작업, 기능추가, 버그리포트 등의 목적으로 사용
 - 협업을 위해 누가 작업할지 정한다.

3. branch
 - 특정 commit에서 가지치기 하듯이 갈라져 나와 작업할 수 있다.
 - 기능별로 이름을 만들어 브랜츠에서 작업해준다.
 - 체크아웃(checkout) : 작업할 브랜치로 바꾸는 것. 체크아웃 된 브랜치에만 commit이 반영됨.

4. merge
 - 브랜치의 작업 내역들을 다른 브랜치로 합치는 것.
 - 기준이 되는 기본 브랜치를 정해놓고 해당 브랜치에 다른 브랜치의 내용을 merge한다.

5. 여기까지의 작업 순서
 1) 누가 어떤 작업을 할 것인지 정한다 (issue)
 2) 각자 맡은 작업을 수행한다. (branch)
 3) 각자 작업을 프로젝트에 합친다. (merge)
 3.5) 경우에 따라 작업내용을 리뷰하고 최종적으로 반영한다. (PR 후 merge)

6. merge conflict
 - merge하는 과정에서 같은 파일의 동일한 부분이 수정된 것이 발견되면 발생한다.
 - merge할 브랜치 내용과 merge하는 브랜치 내용을 구분하여 보여준다.
 - 최종적으로 반영할 내역으로 수정한 후에 merge commit 한다.

6. 원격 repo 의 origin (tracking)
 - tracking : 로컬 repo와 원격 repo의 '특정 브랜치'를 연결해주는 것.
 - push와 pull은 tracking되고 있는 브랜치를 기준으로 commit 내역을 반영한다.
